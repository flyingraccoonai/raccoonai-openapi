{
  "openapi": "3.1.0",
  "info": {
    "title": "Raccoon AI API",
    "description": "The Raccoon AI REST API. Find the documentation here: https://docs.flyingraccoon.tech/",
    "version": "0.0.1"
  },
  "servers": [
    { "url": "https://api.flyingraccoon.tech", "description": "Production" },
    { "url": "https://staging.flyingraccoon.tech", "description": "Staging" },
    { "url": "http://localhost:3800", "description": "Local" }
  ],
  "paths": {
    "/sessions/create": {
      "post": {
        "tags": [
          "Sessions"
        ],
        "summary": "Fleet Websocket Session Create Endpoint",
        "operationId": "fleet_websocket_create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionCreateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "raccoon-secret-key": []
          }
        ]
      }
    },
    "/sessions/{session_id}/status": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "Fleet Session Status Endpoint",
        "operationId": "fleet_session_status",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Session Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "raccoon-secret-key": []
          }
        ]
      }
    },
    "/sessions/{session_id}/terminate": {
      "delete": {
        "tags": [
          "Sessions"
        ],
        "summary": "Fleet Session Terminate Endpoint",
        "operationId": "fleet_session_terminate",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Session Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "raccoon-secret-key": []
          }
        ]
      }
    },
    "/sessions/{session_id}/logs": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "Fleet Session Logs Endpoint",
        "operationId": "fleet_session_logs",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Session Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionLogsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "raccoon-secret-key": []
          }
        ]
      }
    },
    "/lam/run": {
      "post": {
        "tags": [
          "Run"
        ],
        "summary": "Lam Run Endpoint",
        "operationId": "lam_run",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RunRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunResponse"
                }
              },
              "text/event-stream": {
                "schema": {
                  "$ref": "#/components/schemas/RunResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "raccoon-secret-key": []
          }
        ]
      }
    },
    "/lam/extract": {
      "post": {
        "tags": [
          "Extract"
        ],
        "summary": "Lam Extract Endpoint",
        "operationId": "lam_extract",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExtractRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtractResponse"
                }
              },
              "text/event-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ExtractResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "raccoon-secret-key": []
          }
        ]
      }
    },
    "/lam/{app_name}/run": {
      "post": {
        "tags": [
          "Integration"
        ],
        "summary": "Lam Integrations Endpoint",
        "operationId": "lam_integration",
        "parameters": [
          {
            "name": "app_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "App Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/IntegrationResponse"
                      }
                    },
                    {
                      "$ref": "#/components/schemas/IntegrationResponse"
                    }
                  ],
                  "title": "Response Lam Integration",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntegrationResponse"
                  }
                }
              },
              "text/event-stream": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "raccoon-secret-key": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Advanced": {
        "properties": {
          "block_ads": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Block Ads",
            "description": "Whether to block advertisements during the browser session.",
            "default": false,
            "example": true
          },
          "solve_captchas": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Solve Captchas",
            "description": "Whether to attempt automatic CAPTCHA solving.",
            "default": false,
            "example": true
          },
          "proxy": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Proxy",
            "description": "Whether to use a proxy for the browser session.",
            "default": false,
            "example": true
          }
        },
        "type": "object",
        "title": "Advanced"
      },
      "ExtractRequest": {
        "properties": {
          "query": {
            "type": "string",
            "title": "Query",
            "description": "The input query string for the request. This is typically the main prompt.",
            "example": "Find YCombinator startups who got funded in W24."
          },
          "chat_history": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chat History",
            "description": "The history of the conversation as a list of messages or objects you might use while building a chat app to give the model context of the past conversation.",
            "example": []
          },
          "app_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "App Url",
            "description": "This is the entrypoint URL for the web agent.",
            "default": "",
            "example": "https://www.ycombinator.com/companies"
          },
          "schema": {
            "type": "object",
            "title": "Schema",
            "description": "The expected schema for the response. This is a dictionary where the keys describe the fields and the values describe their purposes.",
            "example": {
              "address": {
                "city": "What city is the company located in?",
                "country": "Which country is the company located in?"
              },
              "funding_season": "The funding season like W24 as a string",
              "name": "Name of the company as a string"
            }
          },
          "max_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Count",
            "description": "The maximum number of results to extract.",
            "default": 1,
            "example": 5
          },
          "stream": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stream",
            "description": "Whether the response should be streamed back or not.",
            "default": false,
            "example": true
          },
          "raccoon_passcode": {
            "type": "string",
            "title": "Raccoon Passcode",
            "description": "The raccoon passcode associated with the end user on behalf of which the call is being made.",
            "example": "<end-user-raccoon-passcode>"
          },
          "advanced": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Advanced"
              },
              {
                "type": "null"
              }
            ],
            "description": "Advanced configuration options for the session, such as ad-blocking and CAPTCHA solving.",
            "default": {
              "block_ads": false,
              "solve_captchas": false,
              "proxy": false
            },
            "example": {
              "block_ads": true,
              "proxy": true,
              "solve_captchas": true
            }
          }
        },
        "type": "object",
        "required": [
          "query",
          "raccoon_passcode"
        ],
        "title": "ExtractRequest"
      },
      "ExtractResponse": {
        "properties": {
          "task_status": {
            "type": "string",
            "title": "Task Status",
            "description": "The current status of the extraction task. For example: 'STARTING', 'PROCESSING', 'DONE', 'HUMAN_INTERACTION', or 'FAILURE'.",
            "example": "PROCESSING"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "A message providing the thought summary if the status is processing currently.",
            "example": "I am applying W24 filter in startup directory to find the relevant companies."
          },
          "data": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Data",
            "description": "The extracted data as a list of objects when the status is DONE. Each object represents an extracted entity.",
            "example": [
              {
                "address": {
                  "city": "San Francisco",
                  "country": "USA"
                },
                "funding_season": "W24",
                "name": "Granza Bio"
              },
              {
                "address": {
                  "city": "London",
                  "country": "United Kingdom"
                },
                "funding_season": "W24",
                "name": "Konstructly"
              }
            ]
          },
          "properties": {
            "type": "object",
            "title": "Properties",
            "description": "Additional metadata or information related to the extraction task.",
            "example": {
              "record_count": 2,
              "sessionId": "1234"
            }
          },
          "livestream_url": {
            "type": "string",
            "title": "Livestream Url",
            "description": "The Livestream URL",
            "example": "https://api.flyingraccoon.tech/sessions/session_12345/stream?enable_actions=true&theme=dark"
          }
        },
        "type": "object",
        "required": [
          "task_status",
          "message",
          "data",
          "properties",
          "livestream_url"
        ],
        "title": "ExtractResponse"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "IntegrationRequest": {
        "properties": {
          "properties": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties",
            "description": "Additional properties or data related to the particular integration."
          },
          "integration_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Integration Id",
            "description": "The unique identifier for the integration being called.",
            "default": ""
          },
          "stream": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stream",
            "description": "Whether the response should be streamed back or not.",
            "default": false
          },
          "raccoon_passcode": {
            "type": "string",
            "title": "Raccoon Passcode",
            "description": "The raccoon passcode associated with the end user on behalf of which the call is being made."
          },
          "advanced": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Advanced"
              },
              {
                "type": "null"
              }
            ],
            "description": "Advanced configuration options for the session, such as ad-blocking and CAPTCHA solving.",
            "default": {
              "block_ads": false,
              "solve_captchas": false,
              "proxy": false
            },
            "example": {
              "block_ads": true,
              "proxy": true,
              "solve_captchas": true
            }
          }
        },
        "type": "object",
        "required": [
          "raccoon_passcode"
        ],
        "title": "IntegrationRequest"
      },
      "IntegrationResponse": {
        "properties": {
          "task_status": {
            "type": "string",
            "title": "Task Status",
            "description": "The current status of the extraction task. For example: 'STARTING', 'PROCESSING', 'DONE', 'HUMAN_INTERACTION', or 'FAILURE'.",
            "example": "DONE"
          },
          "integration_id": {
            "type": "string",
            "title": "Integration Id",
            "description": "A unique identifier for the integration in use.",
            "example": "integration_12345"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "A message providing the thought summary if the status is processing currently.",
            "example": "Record added successfully."
          },
          "properties": {
            "type": "object",
            "title": "Properties",
            "description": "Additional metadata or details related to the integration task.",
            "example": {
              "records_processed": 1500
            }
          },
          "livestream_url": {
            "type": "string",
            "title": "Livestream Url",
            "description": "The Livestream URL",
            "example": "https://api.flyingraccoon.tech/sessions/session_12345/stream?enable_actions=true&theme=dark"
          }
        },
        "type": "object",
        "required": [
          "task_status",
          "integration_id",
          "message",
          "properties",
          "livestream_url"
        ],
        "title": "IntegrationResponse"
      },
      "RunRequest": {
        "properties": {
          "query": {
            "type": "string",
            "title": "Query",
            "description": "The input query string for the request. This is typically the main prompt.",
            "example": "Find the price of iphone 16 on Amazon."
          },
          "chat_history": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chat History",
            "description": "The history of the conversation as a list of messages or objects you might use while building a chat app to give the model context of the past conversation.",
            "example": []
          },
          "app_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "App Url",
            "description": "This is the entrypoint URL for the web agent.",
            "default": "",
            "example": "https://www.amazon.com"
          },
          "stream": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stream",
            "description": "Whether the response should be streamed back or not.",
            "default": false,
            "example": true
          },
          "raccoon_passcode": {
            "type": "string",
            "title": "Raccoon Passcode",
            "description": "The raccoon passcode associated with the end user on behalf of which the call is being made.",
            "example": "<end-user-raccoon-passcode>"
          },
          "advanced": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Advanced"
              },
              {
                "type": "null"
              }
            ],
            "description": "Advanced configuration options for the session, such as ad-blocking and CAPTCHA solving.",
            "default": {
              "block_ads": false,
              "solve_captchas": false,
              "proxy": false
            },
            "example": {
              "block_ads": true,
              "proxy": true,
              "solve_captchas": true
            }
          }
        },
        "type": "object",
        "required": [
          "query",
          "raccoon_passcode"
        ],
        "title": "RunRequest"
      },
      "RunResponse": {
        "properties": {
          "task_status": {
            "type": "string",
            "title": "Task Status",
            "description": "The current status of the extraction task. For example: 'STARTING', 'PROCESSING', 'DONE', 'HUMAN_INTERACTION', or 'FAILURE'.",
            "example": "DONE"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "A message providing the thought summary if the status is processing currently.",
            "example": "The price of iPhone 16 on Amazon is $729.97."
          },
          "properties": {
            "type": "object",
            "title": "Properties",
            "description": "Additional metadata or details related to the run task.",
            "example": {
              "sessionId": "1234"
            }
          },
          "livestream_url": {
            "type": "string",
            "title": "Livestream Url",
            "description": "The Livestream URL",
            "example": "https://api.flyingraccoon.tech/sessions/session_12345/stream?enable_actions=true&theme=dark"
          }
        },
        "type": "object",
        "required": [
          "task_status",
          "message",
          "properties",
          "livestream_url"
        ],
        "title": "RunResponse"
      },
      "SessionCreateResponse": {
        "properties": {
          "session_id": {
            "type": "string",
            "title": "Session Id",
            "description": "A unique identifier for the created session.",
            "example": "session_12345"
          },
          "websocket_url": {
            "type": "string",
            "title": "Websocket Url",
            "description": "The WebSocket URL for interacting with the session.",
            "example": "wss://connect.flyingraccoon.tech/ws/6000?sessionId=session_12345"
          },
          "livestream_url": {
            "type": "string",
            "title": "Livestream Url",
            "description": "The Livestream URL",
            "example": "https://api.flyingraccoon.tech/sessions/session_12345/stream?enable_actions=true&theme=dark"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The current status of the session. Possible values include 'running', 'unknown', or 'terminated'.",
            "example": "running"
          }
        },
        "type": "object",
        "required": [
          "session_id",
          "websocket_url",
          "livestream_url",
          "status"
        ],
        "title": "SessionCreateResponse"
      },
      "SessionLogsResponse": {
        "properties": {
          "session_id": {
            "type": "string",
            "title": "Session Id",
            "description": "A unique identifier for the session.",
            "example": "session_12345"
          },
          "session_logs": {
            "type": "object",
            "title": "Session Logs",
            "description": "A dictionary containing the browser console logs for the session.",
            "example": {}
          }
        },
        "type": "object",
        "required": [
          "session_id",
          "session_logs"
        ],
        "title": "SessionLogsResponse"
      },
      "SessionRequest": {
        "properties": {
          "raccoon_passcode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Raccoon Passcode",
            "description": "The raccoon passcode associated with the end user on behalf of which the call is being made if any.",
            "example": "<end-user-raccoon-passcode>"
          },
          "app_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "App Name",
            "description": "The name of the app for which the session is going to run for, used for streamlining authentication.",
            "example": "uber"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url",
            "description": "The entrypoint url for the session.",
            "default": "https://www.google.com",
            "example": "https://www.google.com"
          },
          "browser_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Browser Type",
            "description": "The type of browser to use. Supported values include 'chromium', 'firefox', and 'webkit'.",
            "default": "chromium",
            "example": "chromium"
          },
          "settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Settings"
              },
              {
                "type": "null"
              }
            ],
            "description": "Configuration settings for the browser, such as viewport size and User-Agent string.",
            "default": {
              "viewport": {
                "height": 720,
                "width": 1280
              },
              "locales": [
                "en-US"
              ]
            },
            "example": {
              "locales": [
                "en-US",
                "fr-FR"
              ],
              "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",
              "viewport": {
                "height": 720,
                "width": 1280
              }
            }
          },
          "advanced": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Advanced"
              },
              {
                "type": "null"
              }
            ],
            "description": "Advanced configuration options for the session, such as ad-blocking and CAPTCHA solving.",
            "default": {
              "block_ads": false,
              "solve_captchas": false,
              "proxy": false
            },
            "example": {
              "block_ads": true,
              "proxy": true,
              "solve_captchas": true
            }
          },
          "headless": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Headless",
            "description": "Whether to run the browser in headless mode.",
            "default": false,
            "example": true
          },
          "session_timeout": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Timeout",
            "description": "The timeout for the browser session in seconds.",
            "default": 300,
            "example": 600
          }
        },
        "type": "object",
        "title": "SessionRequest"
      },
      "SessionResponse": {
        "properties": {
          "session_id": {
            "type": "string",
            "title": "Session Id",
            "description": "A unique identifier for the session.",
            "example": "session_12345"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The current status of the session. Possible values include 'running', 'unknown', or 'terminated'.",
            "example": "terminated"
          }
        },
        "type": "object",
        "required": [
          "session_id",
          "status"
        ],
        "title": "SessionResponse"
      },
      "Settings": {
        "properties": {
          "user_agent": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Agent",
            "description": "The User-Agent string to use for the browser. Defaults to internal auto user-agent rotation mechanism.",
            "example": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
          },
          "viewport": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "integer"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Viewport",
            "description": "The viewport size (screen dimensions) for the browser in pixels.",
            "default": {
              "width": 1280,
              "height": 720
            },
            "example": {
              "height": 720,
              "width": 1280
            }
          },
          "locales": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Locales",
            "description": "A list of locales or languages to use for the browser session. These determine language preferences.",
            "default": [
              "en-US"
            ],
            "example": [
              "en-US",
              "fr-FR"
            ]
          }
        },
        "type": "object",
        "title": "Settings"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "raccoon-secret-key": {
        "type": "apiKey",
        "in": "header",
        "name": "raccoon-secret-key"
      }
    }
  },
  "security": [
    {
      "raccoon-secret-key": []
    }
  ]
}